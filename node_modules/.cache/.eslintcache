[{"E:\\react\\testapp\\src\\index.js":"1","E:\\react\\testapp\\src\\App.jsx":"2","E:\\react\\testapp\\src\\Header.jsx":"3","E:\\react\\testapp\\src\\Login.jsx":"4","E:\\react\\testapp\\src\\Signup.jsx":"5","E:\\react\\testapp\\src\\EmployeeDetails.jsx":"6"},{"size":263,"mtime":1623857245003,"results":"7","hashOfConfig":"8"},{"size":611,"mtime":1623862795438,"results":"9","hashOfConfig":"8"},{"size":841,"mtime":1623862800190,"results":"10","hashOfConfig":"8"},{"size":1936,"mtime":1623822510389,"results":"11","hashOfConfig":"8"},{"size":2864,"mtime":1623822360777,"results":"12","hashOfConfig":"8"},{"size":3481,"mtime":1623865823547,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"8h6bdc",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react\\testapp\\src\\index.js",[],["29","30"],"E:\\react\\testapp\\src\\App.jsx",[],"E:\\react\\testapp\\src\\Header.jsx",["31","32"],"E:\\react\\testapp\\src\\Login.jsx",["33","34"],"import React,{ useState } from \"react\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport logo from \"./image/logo11.png\";\r\nimport './index.css';\r\n\r\n\r\nconst Login = () =>{\r\n    const [fullName, setFullName] = useState({\r\n        email : \"\",\r\n        password : \"\"\r\n    });\r\n    \r\n    const inputEvent = (event) =>{\r\n        console.log(event.target.value);\r\n        console.log(event.target.name);\r\n\r\n        const {value, name} = event.target;\r\n        \r\n        setFullName((preValue) =>\r\n        {\r\n            return{\r\n                ...preValue,\r\n                [name] : value,\r\n            }\r\n           \r\n        });\r\n    };\r\n   \r\n\r\n    let onSubmits = () =>{\r\n        //let password = \"khushi\";\r\n        let name = prompt('enter your password :anandi')\r\n        if(name == 'anandi'){\r\n            alert(\"Form is Submited...!!\");\r\n        }else{\r\n            alert(\"plz enter right Password\");\r\n        };\r\n   \r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"login-box\">\r\n            <img className=\"logo\" src={logo}/>\r\n            <h1>Login</h1>\r\n                <form onSubmit={onSubmits}>    \r\n                    <label>Enter Email Id</label>\r\n                    <input \r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    onChange={inputEvent} \r\n                    name=\"email\"\r\n                    value={fullName.email}\r\n\r\n                    />\r\n                    <label>Enter password</label>\r\n                    <input \r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    onChange={inputEvent} \r\n                    name=\"password\"\r\n                    value={fullName.password}    \r\n                    />\r\n                    <br/>\r\n                    <input type=\"submit\"/>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Login;","E:\\react\\testapp\\src\\Signup.jsx",["35"],"import React,{ useState } from \"react\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport logo from \"./image/logo11.png\";\r\nimport './index.css';\r\n\r\n\r\nconst Signup = () =>{\r\n    const [fullName, setFullName] = useState({\r\n        fname : \"\",\r\n        department : \"\",\r\n        email : \"\",\r\n        phone : \"\",\r\n    });\r\n    \r\n    const inputEvent = (event) =>{\r\n        console.log(event.target.value);\r\n        console.log(event.target.name);\r\n\r\n        const {value, name} = event.target;\r\n        \r\n        setFullName((preValue) =>\r\n        {\r\n            return{\r\n                ...preValue,\r\n                [name] : value,\r\n            }\r\n           \r\n        });\r\n    };\r\n   \r\n\r\n    const onSubmits = () =>{\r\n       alert(\"Create Your Form\");\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"login-box-1\">\r\n            <img className=\"logo-1\" src={logo}/>\r\n            <h1>Singn Up</h1>\r\n                <form onSubmit={onSubmits}>    \r\n                    <label>Enter UserName</label>\r\n                    <input \r\n                    type=\"text\"\r\n                    placeholder=\"Enter Username\"\r\n                    onChange={inputEvent} \r\n                    name=\"fname\"\r\n                    value={fullName.fname}\r\n                    required\r\n                  \r\n                    />\r\n\r\n                    <label>Enter Department</label>\r\n                    <input type=\"text\"\r\n                    placeholder=\"Enter Department\"\r\n                    onChange={inputEvent} \r\n                    name=\"department\"\r\n                    value={fullName.department}\r\n                    required\r\n                    />\r\n\r\n                    <label>Enter Email</label>\r\n                    <input \r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    onChange={inputEvent} \r\n                    name=\"email\"\r\n                    value={fullName.email} \r\n                    required\r\n                    />\r\n\r\n                    <label>Enter Phone Number</label>\r\n                    <input \r\n                    type=\"phone\"  \r\n                    placeholder=\"Enter Phone Number\"\r\n                    onChange={inputEvent} \r\n                    name=\"phone\"\r\n                    value={fullName.phone} \r\n                    required\r\n                    />\r\n\r\n                    <label>Add Image</label>\r\n                    <input \r\n                    type=\"file\"  \r\n                    placeholder=\"Add Your Image\"\r\n                    onChange={inputEvent} \r\n                    name=\"image\"\r\n                    value={fullName.image}\r\n                    required\r\n                    />\r\n                    <br/>\r\n                    <input type=\"submit\"/>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Signup;","E:\\react\\testapp\\src\\EmployeeDetails.jsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":13,"column":17,"nodeType":"42","endLine":13,"endColumn":54},{"ruleId":"43","severity":1,"message":"44","line":13,"column":54,"nodeType":"42","endLine":13,"endColumn":89},{"ruleId":"45","severity":1,"message":"46","line":33,"column":17,"nodeType":"47","messageId":"48","endLine":33,"endColumn":19},{"ruleId":"43","severity":1,"message":"44","line":43,"column":13,"nodeType":"42","endLine":43,"endColumn":47},{"ruleId":"43","severity":1,"message":"44","line":38,"column":13,"nodeType":"42","endLine":38,"endColumn":49},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]